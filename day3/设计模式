适配器必须实现原有的旧的接口
适配器对象中持有对新接口的引用，当调用旧接口时，将这个调用委托给实现新接口的对象来处理，也就是在适配器对象中组合一个新接口。

装饰者模式动态地把职责附加到已有对象上去，实现功能扩展。这种特性，使得装饰者模式提供了比继承更具有弹性的解决方案。

需要动态地给一个对象添加功能，实现功能扩展的时候，就可以使用装饰者模式。

适配器模式是用新接口来调用原接口，原接口对新系统来说是不可见或者说不可用的；而装饰者模式原封不动的使用原接口，系统对装饰的对象也通过原接口来完成使用。

关于其包裹的对象：适配器是知道被适配者的详细情况的（就是那个类或那个接口）；而装饰者只知道其接口是什么，至于其具体类型（是基类还是其他派生类）只有在运行期间才知道。


 操作封闭在类内部的变量的方法
      <1>通过public方式的构造函数-------对象已实例化就对该变量赋值。
      <2>通过set、get方法
      set是设置，而get是获取，这两个方法是对数据进行设置和获取用的。
