java.io 定义的大多数类都是流式操作，但 File 类不是。

它直接处理文件和文件系统File 类没有指定信息怎样从文件读取或向文件存储；它描述了文件本身的属性。

File 对象用来获取或处理与磁盘文件相关的信息，例如权限，时间，日期和目录路径。

此外，File 还浏览子目录层次结构。Java 中的目录当成 File 对待，它具有附加的属性——一个可以被 list( )方法检测的文件名列表。

随机访问文件的行为类似存储在文件系统中的一个大型 byte 数组。

rw:读写，文件不存在时会创建该文件，文件存在是，原文件内容不变，通过写操作改变文件内容。

list默认的类型为Object类型

缺点，一是从集合取出对象时，需要执行类型转换操作，集合中存储都是以 Object 对象进行存储的，这无疑让我们的操作变得麻烦。

二是由于没有类型检查，可以向集合添加任意对象，不便于我们对集合的管理，有时候甚至会导致严重的错误。

我们在集合的类型后面添加上一对<>，尖括号中填上我们需要规范的集合里对象的类型，我们可以指定一个或多个类型参数的名字，同时也可以对类型参数的取值范围进行限定，多个类型参数之间用,分隔


工厂模式（Factory Pattern）的意义就跟它的名字一样，在面向对象程序设计中，工厂通常是一个用来创建其他对象的对象

在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。

将工厂方法模式里的方法置为静态的，不需要创建实例，直接调用即可。

**凡是出现了大量的产品需要创建，并且具有共同的接口时，可以通过工厂方法模式进行创建。大多数情况下——静态工厂方法模式。**
